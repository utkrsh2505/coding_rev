Give an example where call apply bind is. required?
Ans. let obj = {
     name : "Ram",
     lname : "singh",
     dis  : function(age){
         console.Log(this.name + " "+ this.lname+" "+ this.age );

     }
}

let obj2{
    name : "john",
}

obj.dis(obj2,"34");


apply---
    obj.dis(obj2,["23"])


bind ----
    let printFun   =o bj.dis(obj2,"43");
    prinytFun();

Q.What is the difference between readFile and readFileSync?
Ans-readFileSync() is synchronous and blocks execution until finished. These return their results as return values.
 readFile() are asynchronous and return immediately while they function in the background. 

Q.What does process in node.js mean?

The process object in Node. js is a global object that can be accessed inside any module without requiring it. 
There are very few global objects or properties provided in Node. js and process is one of them. It is an essential
 component in the Node.

Q.What is the difference of JS from browser to JS on node.js
Ans. -	
Javascript is a programming language that is used for writing scripts on the website. 

Javascript can only be run in the browsers.

It is basically used on the client-side.



Node-
NodeJS is a Javascript runtime environment.

We can run Javascript outside the browser with the help of NodeJS.


It is mostly used on the server-side.


Q.What is shallow equal?
Ans-shallowCompare performs a shallow equality check on the current props and nextProps objects as well as the current state and nextState objects.
It does this by iterating on the keys of the objects being compared and returning true when the values of a key in each object are not strictly equal.

Q-Write a program to check two objects are equal ( deep equal ) ?
ans-The deep equality is similar to the shallow equality, but with one difference. During the shallow check, if the compared properties are objects, a recursive shallow equality check is performed on these nested objects.



Q.Write three different ways to reverse a string in Javascript? a. using inbuilt method, b. iteratively, c. recursively

Ans -- var str = "abcde"
    str = str.split("");
    str = str.reverse();
    console.log(str);


    var str = "abcde"
    str= str.split("");
    var l =0;
    var h =n-1;
    while(l<h){
        swap(arr[l],arr[h]);
        l++
        h--
    }